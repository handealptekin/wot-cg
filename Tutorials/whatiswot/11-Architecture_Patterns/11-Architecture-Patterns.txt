In this video, we will explain architecture patterns, and how devices and things interact with controllers, agents, and servers. 

Previously we have explained the server and client models and described how this architecture works.

Now we will show how they are used in the WoT systems. 

We will introduce 6 architecture patterns in this video. 

So, first, let’s start with the device controllers.  A common deployment pattern is a local device controlled by a user-operated remote controller.  Let’s remember the smart house example from the previous video. 

A remote controller can interact with the devices through the local home network. 

In this pattern, at least one device has a server role that can accept a request and respond. 

Another device remote controller has a client role that can send a message with a request like to read a sensor value or to turn on the device. 

Let’s move to the second architecture pattern, Thing-to-Thing. In this scenario we have two electronic devices, let's say a heater and a temperature sensor. 

When a sensor detects a change in room condition such as temperature drops below the threshold,  it sends the message “turn on” to the heater to turn it on. 

Third architecture that we will introduce is Gateways. 

Smart home gateways pattern is achieved by placing a gateway between a home network and the Internet to manage devices inside the house.  It can also receive commands from a remote controller over the Internet. 

In this pattern, the home gateway has both client and server roles. 

For instance, when the remote controller in this case a smartphone, turns on a device let's say security camera in the client role and the smartphone in the server role. 

On the other way around, when the security camera sends a message to the smartphone, the gateway acts as a server role for the security camera and it acts as a client for the smartphone.  If the camera is in a client role, it can pass the firewalls easily. 

The next pattern is Digital Twins. 

Digital Twin is a model of a device or a group of devices that resides on a cloud server or edge devices. 

It is useful to represent real-world devices that may not be continuously online or to test simulations and services before they are deployed to real devices. 

It can model one or more devices.  Digital Twins can be categorized in different ways depending on whether a device is connected to the cloud or gateway. 

Lastly, we will move to cross-domain collaboration.  In cross-domain collaborations, each system involves other systems in other domains.  For example, Smart Factory with Smart City, Smart City with Smart Home. 

In those models, you can exchange information directly with each other in a peer-to-peer manner or indirectly via some collaboration platform. 

You can proceed to the next tutorial by clicking on the card or the video description.

